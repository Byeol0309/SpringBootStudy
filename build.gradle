buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}/* 쿼리 dsl 추가설정 : p448 */


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'/*데이터베이스 관련*/
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'/*프론트관련*/
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'/*프론트 레이아웃 관련*/

    implementation 'org.springframework.boot:spring-boot-starter-web'       /*spring-web*/
    compileOnly 'org.projectlombok:lombok'            /*lombok*/
    annotationProcessor 'org.projectlombok:lombok'    /*lombok*/
    testCompileOnly 'org.projectlombok:lombok'        /*lombok*/
    testAnnotationProcessor 'org.projectlombok:lombok'/*lombok*/

    /* DTO와 엔티티간에 변환 처리용 p460 */
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.0'
    /*과거에는 엔티티를 DTO로 변환 또는 DTO를 엔티티로 변환해서 사용해야함.*/
    /*프로젝트에 config라는 환경설정용 패키지를 만들고 RootConfig클래스를 만들어서 사용한다.*/

    developmentOnly 'org.springframework.boot:spring-boot-devtools' /*boot개발용*/

    /*1단계 2단계 설정 src/mainresources.application.properties 에서 설정한다*/
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'/*마리아db 드라이버*/

    testImplementation 'org.springframework.boot:spring-boot-starter-test' /*테스트코드 junit메서드단위 테스트*/
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'/*junit용 코드*/

    /*쿼리 dsl 문구 추가 p448 6개의 행 추가함*/
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"


    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")

}

tasks.named('test') {
    useJUnitPlatform()
}

/* 쿼리 dsl 문구 추가 p448 8개 행 추가*/
sourceSets {

    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}

/*쿼리 dsl 사용법 -> 오른쪽에 있는 Gradle메뉴를 열고 other를 찾아서 complieJava task를 실행한다*/
/*하단에 complie가된다 - >왼쪽 탐색기 build ->generated -> main -> domain -> Q로시작하는 클래스*/
/*쿼리 dsl용 객체로 우리가 커스텀하면 안됨. 주의사항 : 엔티티나 dto를 건들면 Q도메인을 다시생성해야한다.*/
/*삭제방법 -> 오른쪽 Gradle 메뉴 -> Task -> build -> clean 후 재생성*/
compileJava.dependsOn('clean')